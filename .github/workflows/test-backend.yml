name: Backend test

on: [push, pull_request]

jobs:
  unittest:

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ startsWith(matrix.onnx-version, 'git+') }}

    strategy:
      matrix:
        # Test current versions on all platforms
        # - use oldest and latest supported python versions
        # - use pinned versions for current onnx-tf release
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9]
        onnx-version: ['onnx==1.10.2']
        tensorflow-version: ['tensorflow==2.8.0 tensorflow-addons==0.16.1 tensorflow_probability==0.16.0']
        include:
          - # Test previous versions on Linux only (regression)
            # - use pinned versions for previous onnx-tf release
            os: ubuntu-latest
            python-version: 3.8
            onnx-version: 'onnx==1.10.2'
            tensorflow-version: 'tensorflow==2.8.0 tensorflow-addons==0.16.1 tensorflow_probability==0.16.0'
          - # Test development versions on Linux only
            # - latest development versions
            # - allow failure via GitHub branch protection rule
            os: ubuntu-latest
            python-version: 3.9
            onnx-version: 'onnx==1.11.0'
            tensorflow-version: 'tensorflow==2.8.0 tensorflow-addons==0.16.1 tensorflow_probability==0.16.0'

    steps:
    - name: Checkout ONNX-TF
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies, ONNX ${{ matrix.onnx-version }}
      if: ${{ matrix.onnx-version == 'development' }}
      run: |
        pip install pytest tabulate ${{ matrix.tensorflow-version }}
        ONNX_TF_PATH=$(pwd)
        #build onnx 
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        tmp_dir=$(mktemp -d)
        git clone https://github.com/onnx/onnx.git $tmp_dir
        cd $tmp_dir
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
        docker run --rm -v $(pwd):/github/workspace --workdir /github/workspace --entrypoint bash \
        quay.io/pypa/manylinux2010_x86_64 .github/workflows/manylinux/entrypoint.sh ${{ matrix.python-version }} manylinux2010_x86_64 pull_request
        #install onnx
        pip install dist/*manylinux2010_x86_64.whl
        cd $ONNX_TF_PATH
        pip install -e .
    - name: Install dependencies, ONNX ${{ matrix.onnx-version }}
      if: ${{ startsWith(matrix.onnx-version, 'onnx==') }}
      run: |
        pip install pytest tabulate ${{ matrix.tensorflow-version }}
        pip install ${{ matrix.onnx-version }}
        pip install -e .
    - name: Run Backend tests
      run: |
        python -m unittest discover test -v
